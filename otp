#!/usr/bin/env python
"""
One-Time Password Generator

Author: Peter Pakos <peter.pakos@wandisco.com>
"""

from __future__ import print_function

import argparse
import os
import sys
import pyotp


class Main(object):
    """This is a main code class."""
    _version = '1.0.0'
    _name = os.path.basename(sys.argv[0])

    def __init__(self):
        self._key_file = os.path.expanduser('~') + '/.otpkeys'
        self._args = self._parse_args()
        self._keys = {}
        if os.path.isfile(self._key_file):
            with open(self._key_file, 'r') as f:
                for line in f:
                    if line != '\n':
                        service = line.partition('=')[0].strip()
                        key = line.partition('=')[2].strip().replace(' ', '')
                        if service and key:
                            self._keys[service] = key

    def _parse_args(self):
        parser = argparse.ArgumentParser(description='One-Time Password Generator')
        parser.add_argument('--version', action='version', version='%s %s' % (self._name, self._version))
        parser.add_argument('key', help='key or service name from ~/.otpkeys')
        return parser.parse_args()

    @staticmethod
    def _totp(key):
        try:
            code = pyotp.TOTP(key).now()
            return code
        except TypeError:
            return False

    def run(self):
        """This method runs the main code."""
        if self._args.key in self._keys:
            key = self._keys[self._args.key]
        else:
            key = self._args.key

        code = self._totp(key)

        if code:
            print(code)
        else:
            print('KEY ERROR', file=sys.stderr)
            exit(1)

if __name__ == '__main__':
    try:
        MAIN = Main()
        MAIN.run()
    except KeyboardInterrupt:
        print('\nCancelling...')
